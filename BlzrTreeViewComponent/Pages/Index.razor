@page "/"

<Treeview Tvalue="Funcionalidade" DataSource="@Funcionalidades" Id="Id" Text="ItemName" ParentId="ParentId"
          Expanded="Expanded" HasChildren="HasSubItem"></Treeview>

@*<Treeview Tvalue="MailItem" DataSource="@MyFolder" Id="Id" Text="FolderName" ParentId="ParentId"
          Expanded="Expanded" HasChildren="HasSubFolder"></Treeview>*@

@code{
    protected class MailItem
    {
        public int Id { get; set; }
        public string ParentId { get; set; }
        public bool HasSubFolder { get; set; }
        public string FolderName { get; set; }
        public bool Expanded { get; set; }
    }

    List<MailItem> MyFolder = new List<MailItem>();

    protected class Funcionalidade
    {
        public int Id { get; set; }
        public string ItemId { get; set; }
        public string ParentId { get; set; }
        public bool HasSubItem { get; set; }
        public string ItemName { get; set; }
        public bool Expanded { get; set; }
    }

    protected class Sistema
    {
        public int Id { get; set; }
        public string Descricao { get; set; }
    }

    protected class Perfil
    {
        public int Id { get; set; }
        public int ParentId { get; set; }
        public string Descricao { get; set; }
    }

    protected class Modulo
    {
        public int Id { get; set; }
        public int ParentId { get; set; }
        public string Descricao { get; set; }
    }

    private List<Perfil> GetPerfil(string sistema)
    {
        var result = new List<Perfil>();

        if (sistema == "JDACE")
        {
            result = Perfis.Where(p => p.Id == 1).ToList();
        }
        else
        {
            result = Perfis.Where(p => p.Id > 1).ToList();
        }

        return result;
    }

    private List<Modulo> GetModulo(string sistema)
    {
        var result = new List<Modulo>();

        if (sistema == "JDACE")
        {
            result = Modulos.Where(p => p.Id == 1).ToList();
        }
        else
        {
            result = Modulos.Where(p => p.Id > 1).ToList();
        }

        return result;
    }

    private void MontaTreeView()
    {
        int idFunc = 0;
        int idFuncPaiPerfil = 0;
        int idFuncPaiModulo = 0;

        #region Carrega SISTEMAS...
        var sistemas = Sistemas;

        foreach (var sistema in sistemas)
        {
            idFunc += 1;
            Funcionalidades.Add(new Funcionalidade
            {
                Id = idFunc,
                ParentId = string.Empty,
                HasSubItem = true,
                ItemName = sistema.Descricao,
                Expanded = true
            });

            #region Carrega PERFIS...
            var perfis = GetPerfil(sistema.Descricao);

            idFuncPaiPerfil = idFunc;
            foreach (var perfil in perfis)
            {
                idFunc += 1;
                Funcionalidades.Add(new Funcionalidade
                {
                    Id = idFunc,
                    ParentId = idFuncPaiPerfil.ToString(),
                    HasSubItem = true,
                    ItemName = perfil.Descricao,
                    Expanded = true
                }); 

                #region Carrega MODULOS...
                var modulos = GetModulo(sistema.Descricao);

                idFuncPaiModulo = idFunc;
                foreach (var modulo in modulos)
                {
                    idFunc += 1;
                    Funcionalidades.Add(new Funcionalidade
                        {
                            Id = idFunc,
                            ParentId = idFuncPaiModulo.ToString(),
                            HasSubItem = true,
                            ItemName = modulo.Descricao,
                            Expanded = true
                        });
                }
                #endregion
            }
            #endregion
        }
        #endregion
    }

    List<Sistema> Sistemas = new List<Sistema>();
    List<Perfil> Perfis = new List<Perfil>();
    List<Modulo> Modulos = new List<Modulo>();
    List<Funcionalidade> Funcionalidades = new List<Funcionalidade>();

    protected override Task OnInitializedAsync()
    {
        Sistemas.Add(new Sistema { Id = 1, Descricao = "JDACE" });
        Sistemas.Add(new Sistema { Id = 2, Descricao = "JDCTC" });

        Perfis.Add(new Perfil { Id = 1, Descricao = "Perfil - Administrador" });
        Perfis.Add(new Perfil { Id = 2, Descricao = "Perfil - Operacional" });
        Perfis.Add(new Perfil { Id = 3, Descricao = "Perfil - Master" });

        Modulos.Add(new Modulo { Id = 1, Descricao = "JDACE - Acesso" });
        Modulos.Add(new Modulo { Id = 2, Descricao = "JDCTC - Web" });
        Modulos.Add(new Modulo { Id = 3, Descricao = "JDCTC - Web Service" });

        MontaTreeView();

        return base.OnInitializedAsync();
    }

}
